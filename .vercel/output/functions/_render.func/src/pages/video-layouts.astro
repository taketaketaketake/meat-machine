---
// src/pages/video-layouts.astro
import Layout from '../components/astro/layout.astro';
import '../styles/global.css';

const trendingTags = ['#cyberpunk', '#solarpunk', 'cinematic lighting', '80s anime style', 'photorealistic', '#creepy', 'lofi beats', '#fantasyart'];
const topVoted = [
    { id: 1, title: 'Mind-Bending AI Video', creator: '@VideoMage_99', votes: 12500, emoji: 'üé¨' },
    { id: 2, title: 'AI Rock Revolution', creator: '@RockBot_AI', votes: 11800, emoji: 'üé∏' },
    { id: 3, title: 'The Last Algorithm', creator: '@StoryWeaver_AI', votes: 9600, emoji: 'üìñ' },
    { id: 4, title: 'Forest Rain Meditation', creator: '@NatureSounds_AI', votes: 8200, emoji: 'üåø' }
];
const newestMembers = [
    { handle: '@pixel_dreamer', avatarEmoji: 'üßë‚ÄçüöÄ' },
    { handle: '@synthwave_sound', avatarEmoji: 'üéß' },
    { handle: '@glitch_in_art', avatarEmoji: 'üëæ' },
    { handle: '@code_poet', avatarEmoji: '‚úçÔ∏è' }
];

const styleHotspots = [
  { id: 'spot-1', title: 'Corktown Eats', creator: 'Motor City Muncher', coords: { top: '55%', left: '38%' } },
  { id: 'spot-2', title: 'Midtown Art Scene', creator: 'Explore Detroit', coords: { top: '40%', left: '50%' } },
  { id: 'spot-3', title: 'Eastern Market Haul', creator: 'Detroit Dabs', coords: { top: '45%', left: '65%' } },
  { id: 'spot-4', title: 'Riverfront Skate Park', creator: 'Explore Detroit', coords: { top: '70%', left: '55%' } },
];

const themedCollection = {
  title: "The Canna-seur's Guide to Edibles",
  description: "A curated collection of videos covering everything from cooking basics to advanced infusion techniques. Your journey to becoming a cannabis culinary expert starts here.",
  videos: [
    { id: 'th-1', title: 'Cooking with Cannabis: The Basics', duration: '8:20' },
    { id: 'th-2', title: 'DIY Tinctures & Oils', duration: '7:15' },
    { id: 'th-3', title: 'Gourmet Gummy Recipe', duration: '12:45' },
  ],
};

const categories = [ { id: "all", label: "All Videos" }, { id: "cannabis", label: "Cannabis" }, { id: "food", label: "Food & Drink" }, { id: "local", label: "Local Businesses" }, { id: "events", label: "Events" }];

// --- NEW: Data for the Hero Slider ---
const sliderItems = [
  { type: 'overview' },
  { type: 'creators' },
  { type: 'tools' }
];

const today = new Date('2025-06-24T14:39:00'); 

function isNew(videoDateStr: string) {
  const videoDate = new Date(videoDateStr);
  const diffTime = today.getTime() - videoDate.getTime();
  const diffDays = Math.ceil(diffTime / (1000 * 60 * 60 * 24));
  return diffDays <= 10 && diffDays >= 0;
}
const tools = [
  {
    name: 'Midjourney',
    icon: '‚õµÔ∏è',
    description: 'The industry-leading platform for crafting breathtaking, high-resolution images from simple text prompts.',
    tags: ['Image', 'Art'],
    gradient: 'from-indigo-500/20 to-blue-500/20'
  },
  {
    name: 'OpenAI Sora',
    icon: 'üé¨',
    description: 'A revolutionary text-to-video model that generates cinematic, high-fidelity video clips from your imagination.',
    tags: ['Video', 'Cinematic'],
    gradient: 'from-teal-500/20 to-cyan-500/20'
  },
  {
    name: 'Suno',
    icon: 'üéµ',
    description: 'Create radio-quality music in any genre, complete with custom lyrics and vocals, in just a matter of seconds.',
    tags: ['Music', 'Audio'],
    gradient: 'from-orange-500/20 to-amber-500/20'
  },
  {
    name: 'ElevenLabs',
    icon: 'üé§',
    description: 'The premier toolkit for generating ultra-realistic text-to-speech and cloning voices for any project.',
    tags: ['Voice', 'Audio'],
    gradient: 'from-rose-500/20 to-pink-500/20'
  }
];

---

<Layout 
  title="Video Layouts - Meat AI Platform" 
  description="Explore different video layout options for AI-generated content on Meat platform"
  class="bg-gray-950"
>
  <div class="max-w-7xl mx-auto p-8 space-y-16">

    <div class="text-center py-12">
      <h1 class="text-4xl font-black text-white mb-4">
        Video Layout <span class="text-gradient-pink">Showcase</span>
      </h1>
      <p class="text-lg text-gray-300 max-w-2xl mx-auto">
        Explore different ways to display AI-generated video content
      </p>
    </div>

    <section id="option1" class="space-y-6">
      <div class="border-l-4 border-pink-500 pl-6">
        <h2 class="text-2xl font-bold text-white">
          Responsive Grid Gallery
        </h2>
        <p class="text-gray-400 text-sm">4 video thumbnails in a responsive grid layout</p>
      </div>
      <div class="grid gap-6 grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4">
        {Array.from({ length: 4 }).map((_, i) => (
          <div class="aspect-[9/16] bg-gray-900/50 rounded-xl overflow-hidden shadow-lg hover:shadow-pink-500/20 transition-all duration-300 group cursor-pointer">
            <div class="w-full h-full bg-gradient-to-br from-purple-600/30 to-pink-600/30 flex items-center justify-center relative">
              <div class="text-center text-gray-300">
                <div class="text-4xl mb-2">üé¨</div>
                <div class="text-sm font-medium">AI Video {i + 1}</div>
              </div>
              <div class="absolute inset-0 flex items-center justify-center opacity-0 group-hover:opacity-100 transition-opacity bg-black/20">
                <div class="w-12 h-12 bg-white/90 rounded-full flex items-center justify-center">
                  <span class="text-black text-xl ml-1">‚ñ∂</span>
                </div>
              </div>
              <div class="absolute bottom-2 right-2 bg-black/80 text-white text-xs px-2 py-1 rounded">
                {Math.floor(Math.random() * 5) + 1}:{String(Math.floor(Math.random() * 60)).padStart(2, '0')}
              </div>
            </div>
          </div>
        ))}
      </div>
    </section>

    <section class="py-16 sm:py-24">
      <div class="grid grid-cols-1 lg:grid-cols-2 gap-x-16 gap-y-12 items-center">
        
        <div class="space-y-6">
          <h2 class="text-4xl md:text-5xl font-black text-white leading-tight">
            More Than a Gallery.
            <br>
            A <span class="text-gradient-pink">Living Community.</span>
          </h2>
          
          <p class="text-lg text-gray-300">
            Whether you're crafting stunning visuals with <strong class="text-white">Midjourney</strong>, directing short films with <strong class="text-white">Sora</strong>, composing symphonies with <strong class="text-white">Suno</strong>, or writing poetry with a custom LLM, your work has a home here. We are a platform for every artist and every tool.
          </p>
          
          <div class="flex flex-wrap gap-4 pt-4">
            <a href="#video-grid" class="px-6 py-3 bg-pink-600 text-white rounded-lg font-semibold shadow-lg hover:bg-pink-500 transition-colors">
              Explore Creations
            </a>
            <a href="#" class="px-6 py-3 bg-gray-700 text-gray-300 rounded-lg font-semibold hover:bg-gray-600 transition-colors">
              Share Your Work
            </a>
          </div>
        </div>
    
        <div class="relative h-96 lg:h-[500px] w-full">
          <div class="absolute w-2/3 top-0 left-0 aspect-square bg-gradient-to-br from-purple-600/30 to-pink-600/30 rounded-2xl shadow-2xl flex items-center justify-center -rotate-6 transform hover:rotate-[-8deg] hover:scale-105 transition-all duration-300">
              <div class="text-6xl">üé®</div>
          </div>
          <div class="absolute w-2/3 bottom-0 right-0 aspect-video bg-gradient-to-br from-emerald-600/30 to-blue-600/30 rounded-2xl shadow-2xl flex items-center justify-center rotate-3 transform hover:rotate-[5deg] hover:scale-105 transition-all duration-300">
              <div class="text-6xl">üé¨</div>
          </div>
          <div class="absolute w-1/2 top-1/2 left-1/2 -translate-x-1/2 -translate-y-1/2 aspect-square bg-gradient-to-br from-sky-600/30 to-indigo-600/30 rounded-2xl shadow-2xl flex items-center justify-center rotate-12 transform hover:rotate-[15deg] hover:scale-105 transition-all duration-300">
              <div class="text-6xl">üéµ</div>
          </div>
        </div>
    
      </div>
    </section>

    <section>
      <div class="border-l-4 border-green-500 pl-6 mb-8">
          <h2 class="text-3xl font-bold text-white">Community Pulse</h2>
          <p class="text-gray-400">What's happening in the community, right now.</p>
      </div>
      <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8">
          <div class="bg-gray-900/50 p-6 rounded-xl border border-gray-800">
              <h3 class="font-bold text-white mb-4">Trending Tags & Prompts</h3>
              <div class="flex flex-wrap gap-2">
                  {trendingTags.map(tag => (
                      <a href="#" class="text-sm bg-gray-800 text-gray-300 px-3 py-1 rounded-full hover:bg-gray-700 hover:text-white transition-colors">{tag}</a>
                  ))}
              </div>
          </div>
          <div class="bg-gray-900/50 p-6 rounded-xl border border-gray-800">
              <h3 class="font-bold text-white mb-4">Top Voted This Week</h3>
              <ol class="space-y-4">
                  {topVoted.map((item, index) => (
                      <li class="flex items-center gap-4 text-sm">
                          <span class="font-bold text-gray-500">{index + 1}</span>
                          <div class="w-10 h-10 rounded bg-gray-700 flex-shrink-0 flex items-center justify-center text-lg">{item.emoji}</div>
                          <div class="flex-grow">
                              <p class="text-white font-semibold line-clamp-1">{item.title}</p>
                              <p class="text-gray-400 line-clamp-1">{item.creator}</p>
                          </div>
                          <div class="text-pink-400 font-bold">{(item.votes / 1000).toFixed(1)}k</div>
                      </li>
                  ))}
              </ol>
          </div>
          <div class="bg-gray-900/50 p-6 rounded-xl border border-gray-800">
              <h3 class="font-bold text-white mb-4">Welcome New Creators</h3>
              <div class="space-y-3">
                  {newestMembers.map(member => (
                      <div class="flex items-center justify-between gap-4">
                          <a href="#" class="flex items-center gap-3 group">
                              <div class="w-10 h-10 rounded-full bg-gray-700 flex-shrink-0 flex items-center justify-center text-xl">{member.avatarEmoji}</div>
                              <span class="text-white font-medium group-hover:text-pink-400 transition-colors">{member.handle}</span>
                          </a>
                          <button class="text-xs font-semibold bg-gray-700 text-gray-300 px-3 py-1 rounded-full hover:bg-pink-600 hover:text-white transition-colors">Follow</button>
                      </div>
                  ))}
              </div>
          </div>
      </div>
  </section>

    <section id="option2" class="space-y-6">
      <div class="border-l-4 border-emerald-500 pl-6">
        <h2 class="text-2xl font-bold text-white">
          Horizontal Carousel
        </h2>
        <p class="text-gray-400 text-sm">Swipeable video carousel with snap scrolling</p>
      </div>
      <div class="flex space-x-6 overflow-x-auto px-4 snap-x snap-mandatory pb-4">
        {Array.from({ length: 5 }).map((_, i) => (
          <div class="flex-shrink-0 snap-start w-64 sm:w-72 md:w-80 aspect-[9/16] rounded-xl overflow-hidden shadow-lg bg-gray-900/50 hover:bg-gray-800/60 transition-all duration-300 group cursor-pointer">
            <div class="w-full h-full bg-gradient-to-br from-emerald-600/30 to-blue-600/30 flex items-center justify-center relative">
              <div class="text-center text-gray-300">
                <div class="text-4xl mb-2">üåä</div>
                <div class="text-sm font-medium">Carousel {i + 1}</div>
              </div>
              <div class="absolute inset-0 flex items-center justify-center opacity-0 group-hover:opacity-100 transition-opacity bg-black/20">
                <div class="w-12 h-12 bg-white/90 rounded-full flex items-center justify-center">
                  <span class="text-black text-xl ml-1">‚ñ∂</span>
                </div>
              </div>
              <div class="absolute bottom-2 right-2 bg-black/80 text-white text-xs px-2 py-1 rounded">
                {Math.floor(Math.random() * 10) + 1}:{String(Math.floor(Math.random() * 60)).padStart(2, '0')}
              </div>
            </div>
          </div>
        ))}
      </div>
    </section>

    <section id="option3" class="space-y-6">
      <div class="border-l-4 border-yellow-500 pl-6">
        <h2 class="text-2xl font-bold text-white">
          Full-Screen Stories
        </h2>
        <p class="text-gray-400 text-sm">Instagram/TikTok style vertical stories</p>
      </div>
      <div class="h-screen overflow-y-auto snap-y snap-mandatory rounded-xl">
        {Array.from({ length: 3 }).map((_, i) => (
          <div class="snap-start h-screen relative bg-gray-900 flex items-center justify-center">
            <div class="w-full h-full bg-gradient-to-br from-red-600/40 to-orange-600/40 flex items-center justify-center relative">
              <div class="text-center text-gray-300">
                <div class="text-6xl mb-4">üé≠</div>
                <div class="text-xl font-bold">Story {i + 1}</div>
              </div>
              <div class="absolute bottom-6 left-4 text-white">
                <h3 class="text-2xl font-bold">AI Generated Story {i + 1}</h3>
                <p class="text-sm opacity-75">Swipe up for next story</p>
              </div>
            </div>
          </div>
        ))}
      </div>
    </section>

    <section id="option4" class="space-y-8">
      <div class="border-l-4 border-blue-500 pl-6">
        <h2 class="text-2xl font-bold text-white">
          Hero Banner + Thumbnail Grid
        </h2>
        <p class="text-gray-400 text-sm">Featured video with supporting thumbnails</p>
      </div>
      <div class="relative aspect-video w-full max-w-4xl mx-auto rounded-xl overflow-hidden shadow-2xl group cursor-pointer">
        <div class="w-full h-full bg-gradient-to-br from-blue-600/40 to-indigo-600/40 flex items-center justify-center relative">
          <div class="text-center text-gray-300">
            <div class="text-6xl mb-4">‚≠ê</div>
            <div class="text-2xl font-bold">Featured AI Creation</div>
          </div>
          <div class="absolute inset-0 flex items-center justify-center opacity-0 group-hover:opacity-100 transition-opacity bg-black/20">
            <div class="w-20 h-20 bg-white/90 rounded-full flex items-center justify-center">
              <span class="text-black text-3xl ml-1">‚ñ∂</span>
            </div>
          </div>
          <div class="absolute bottom-4 left-4 bg-pink-500 text-white px-3 py-1 rounded font-bold">
            FEATURED
          </div>
        </div>
      </div>
      <div class="grid grid-cols-2 sm:grid-cols-3 lg:grid-cols-4 gap-4">
        {Array.from({ length: 4 }).map((_, i) => (
          <div class="aspect-video bg-gray-900/50 rounded-lg overflow-hidden shadow-md hover:shadow-lg transition-all duration-300 group cursor-pointer">
            <div class="w-full h-full bg-gradient-to-br from-gray-600/30 to-gray-500/30 flex items-center justify-center relative">
              <div class="text-center text-gray-300">
                <div class="text-2xl mb-1">üì±</div>
                <div class="text-xs font-medium">Related {i + 1}</div>
              </div>
              <div class="absolute inset-0 flex items-center justify-center opacity-0 group-hover:opacity-100 transition-opacity bg-black/20">
                <div class="w-8 h-8 bg-white/90 rounded-full flex items-center justify-center">
                  <span class="text-black text-sm ml-0.5">‚ñ∂</span>
                </div>
              </div>
            </div>
          </div>
        ))}
      </div>
    </section>

    <section id="option5" class="space-y-6">
      <div class="border-l-4 border-purple-500 pl-6">
        <h2 class="text-2xl font-bold text-white">
          Masonry Brick Layout
        </h2>
        <p class="text-gray-400 text-sm">Pinterest-style staggered video grid</p>
      </div>
      <div class="columns-1 sm:columns-2 lg:columns-3 xl:columns-4 gap-4 space-y-4">
        {Array.from({ length: 8 }).map((_, i) => (
          <div class="break-inside-avoid rounded-xl overflow-hidden shadow-lg bg-gray-900/50 hover:bg-gray-800/60 transition-all duration-300 group cursor-pointer mb-4">
            <div class={`w-full bg-gradient-to-br ${[
              'from-purple-600/30 to-pink-600/30',
              'from-emerald-600/30 to-blue-600/30', 
              'from-orange-600/30 to-red-600/30',
              'from-indigo-600/30 to-purple-600/30'
            ][i % 4]} flex items-center justify-center relative`} style={`height: ${200 + (i % 3) * 50}px`}>
              <div class="text-center text-gray-300">
                <div class="text-3xl mb-2">{['üé®', 'üéµ', 'üìπ', '‚ú®', 'üåü', 'üé≠', 'üöÄ', 'üíé'][i]}</div>
                <div class="text-sm font-medium">Brick {i + 1}</div>
              </div>
              <div class="absolute inset-0 flex items-center justify-center opacity-0 group-hover:opacity-100 transition-opacity bg-black/20">
                <div class="w-10 h-10 bg-white/90 rounded-full flex items-center justify-center">
                  <span class="text-black text-lg ml-0.5">‚ñ∂</span>
                </div>
              </div>
            </div>
          </div>
        ))}
      </div>
    </section>

          <!-- ======================================= -->
      <!-- 3. INTERACTIVE: "Discover by Location" Map -->
      <!-- ======================================= -->
      <section>
        <div class="text-center">
          <h2 class="text-3xl font-bold text-white">Discover by Location</h2>
          <p class="mt-2 text-lg text-gray-400">Explore an interactive map of Detroit. Click a hotspot to find content.</p>
        </div>
        <div class="relative w-full max-w-4xl mx-auto mt-12 aspect-video rounded-xl border-2 border-dashed border-gray-700/50 bg-gray-950/30 p-4">
          <div class="absolute inset-0 bg-grid-gray-800/20 [mask-image:radial-gradient(ellipse_at_center,white,transparent_70%)]"></div>
          {styleHotspots.map(spot => (
            <div class="absolute" style={`top: ${spot.coords.top}; left: ${spot.coords.left};`}>
              <a href="#" class="group relative">
                <div class="w-4 h-4 rounded-full bg-pink-500 transition-all duration-300 group-hover:scale-150 animate-pulse"></div>
                <div class="absolute bottom-full mb-3 left-1/2 -translate-x-1/2 w-48 bg-gray-900 border border-gray-700 p-2 rounded-lg text-center opacity-0 group-hover:opacity-100 transition-opacity pointer-events-none">
                  <p class="font-bold text-white text-sm">{spot.title}</p>
                  <p class="text-xs text-gray-400">by {spot.creator}</p>
                </div>
              </a>
            </div>
          ))}
        </div>
      </section>

    <section id="option6" class="space-y-6">
      <div class="border-l-4 border-teal-500 pl-6">
        <h2 class="text-2xl font-bold text-white">
          Hover-Play Preview Cards
        </h2>
        <p class="text-gray-400 text-sm">Thumbnail previews that activate on hover</p>
      </div>
      <div class="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-6">
        {Array.from({ length: 3 }).map((_, i) => (
          <div class="relative group overflow-hidden rounded-xl shadow-lg bg-gray-900/50 hover:bg-gray-800/60 transition-all duration-300 cursor-pointer">
            <div class="w-full aspect-[9/16] bg-gradient-to-br from-teal-600/30 to-cyan-600/30 flex items-center justify-center relative">
              <div class="text-center text-gray-300 transition-opacity group-hover:opacity-50">
                <div class="text-4xl mb-2">üé¨</div>
                <div class="text-sm font-medium">Hover Preview {i + 1}</div>
              </div>
              <div class="absolute inset-0 flex items-center justify-center opacity-0 group-hover:opacity-100 transition-opacity bg-gradient-to-br from-pink-600/20 to-purple-600/20">
                <div class="text-center text-white">
                  <div class="w-16 h-16 bg-white/90 rounded-full flex items-center justify-center mb-2 mx-auto">
                    <span class="text-black text-2xl ml-1">‚ñ∂</span>
                  </div>
                  <div class="text-sm font-medium">Playing Preview...</div>
                </div>
              </div>
            </div>
          </div>
        ))}
      </div>
    </section>

    <section id="option7" class="space-y-6">
      <div class="border-l-4 border-red-500 pl-6">
        <h2 class="text-2xl font-bold text-white">
          Interactive Map Video Markers
        </h2>
        <p class="text-gray-400 text-sm">Click markers to watch location-based content</p>
      </div>
      <div class="relative h-96 w-full rounded-xl overflow-hidden bg-gray-800">
        <div id="map-demo" class="absolute inset-0 bg-gradient-to-br from-gray-700 to-gray-800 flex items-center justify-center">
          <div class="text-gray-400 text-center">
            <div class="text-2xl mb-2">üó∫Ô∏è</div>
            <div class="text-sm">Interactive Map Demo</div>
          </div>
          <button id="marker1" class="absolute top-1/4 left-1/4 w-8 h-8 bg-red-500 rounded-full cursor-pointer hover:bg-red-400 transition-colors shadow-lg pulse-marker flex items-center justify-center text-white text-sm font-bold">1</button>
          <button id="marker2" class="absolute top-1/2 left-1/2 w-8 h-8 bg-red-500 rounded-full cursor-pointer hover:bg-red-400 transition-colors shadow-lg pulse-marker flex items-center justify-center text-white text-sm font-bold">2</button>
          <button id="marker3" class="absolute bottom-1/4 right-1/4 w-8 h-8 bg-red-500 rounded-full cursor-pointer hover:bg-red-400 transition-colors shadow-lg pulse-marker flex items-center justify-center text-white text-sm font-bold">3</button>
        </div>
        <div id="video-popup" class="hidden absolute top-1/4 left-1/4 w-80 aspect-[9/16] bg-gray-900 rounded-lg shadow-2xl overflow-hidden border border-gray-700">
          <button id="close-popup" class="absolute top-2 right-2 text-white bg-black/60 rounded-full p-2 hover:bg-black/80 transition-colors z-10">
            <svg class="w-4 h-4" fill="none" viewBox="0 0 24 24" stroke="currentColor">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12" />
            </svg>
          </button>
          <div id="popup-content" class="w-full h-full bg-gradient-to-br from-red-600/30 to-orange-600/30 flex items-center justify-center">
            <div class="text-center text-gray-300">
              <div class="text-4xl mb-2">üìç</div>
              <div class="text-sm font-medium">Location Video</div>
            </div>
          </div>
        </div>
      </div>
    </section>

    <section id="option8" class="space-y-6">
      <div class="border-l-4 border-green-500 pl-6">
        <h2 class="text-2xl font-bold text-white">
          Sticky Mini-Player
        </h2>
        <p class="text-gray-400 text-sm">Video minimizes to corner when scrolling</p>
      </div>
      <div class="relative">
        <div class="h-96 bg-gray-900 rounded-xl overflow-hidden" id="main-video">
          <div class="w-full h-full bg-gradient-to-br from-green-600/30 to-emerald-600/30 flex items-center justify-center relative group cursor-pointer">
            <div class="text-center text-gray-300">
              <div class="text-6xl mb-4">üì∫</div>
              <div class="text-xl font-bold">Main Video Player</div>
              <div class="text-sm opacity-75">Scroll down to see mini-player</div>
            </div>
            <div class="absolute inset-0 flex items-center justify-center opacity-0 group-hover:opacity-100 transition-opacity bg-black/20">
              <div class="w-20 h-20 bg-white/90 rounded-full flex items-center justify-center">
                <span class="text-black text-3xl ml-1">‚ñ∂</span>
              </div>
            </div>
          </div>
        </div>
        <div id="mini-player" class="fixed bottom-4 right-4 w-48 aspect-video rounded-lg overflow-hidden shadow-xl z-50 bg-gray-900 border border-gray-700 hidden">
          <div class="w-full h-full bg-gradient-to-br from-green-600/50 to-emerald-600/50 flex items-center justify-center relative">
            <div class="text-center text-gray-300">
              <div class="text-2xl mb-1">üì∫</div>
              <div class="text-xs font-medium">Mini Player</div>
            </div>
            <button id="close-mini" class="absolute top-1 right-1 text-white bg-black/60 rounded-full p-1 hover:bg-black/80 transition-colors">
              <svg class="w-3 h-3" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12" />
              </svg>
            </button>
          </div>
        </div>
      </div>
    </section>

    <section id="option9" class="space-y-6">
      <div class="border-l-4 border-pink-500 pl-6">
        <h2 class="text-2xl font-bold text-white">
          Modal Lightbox Gallery
        </h2>
        <p class="text-gray-400 text-sm">Click thumbnails to open in full-screen modal</p>
      </div>
      <div class="grid grid-cols-2 sm:grid-cols-3 lg:grid-cols-4 xl:grid-cols-5 gap-4">
        {Array.from({ length: 10 }).map((_, i) => (
          <button class="lightbox-trigger cursor-pointer group" data-video={`video-${i + 1}`}>
            <div class="w-full aspect-square bg-gray-900/50 rounded-lg overflow-hidden shadow-md hover:shadow-lg transition-all duration-300 group-hover:scale-105">
              <div class={`w-full h-full bg-gradient-to-br ${[
                'from-pink-600/30 to-purple-600/30',
                'from-blue-600/30 to-cyan-600/30',
                'from-orange-600/30 to-red-600/30',
                'from-green-600/30 to-emerald-600/30',
                'from-purple-600/30 to-indigo-600/30'
              ][i % 5]} flex items-center justify-center relative`}>
                <div class="text-center text-gray-300">
                  <div class="text-2xl mb-1">{['üé®', 'üéµ', 'üìπ', '‚ú®', 'üåü'][i % 5]}</div>
                  <div class="text-xs font-medium">Thumb {i + 1}</div>
                </div>
                <div class="absolute inset-0 flex items-center justify-center opacity-0 group-hover:opacity-100 transition-opacity bg-black/20">
                  <div class="w-8 h-8 bg-white/90 rounded-full flex items-center justify-center">
                    <span class="text-black text-sm ml-0.5">‚ñ∂</span>
                  </div>
                </div>
              </div>
            </div>
          </button>
        ))}
      </div>
      
      <div id="lightbox-modal" class="fixed inset-0 bg-black/90 hidden items-center justify-center z-50 backdrop-blur-sm">
        <button id="close-lightbox" class="absolute top-4 right-4 text-white text-2xl hover:text-pink-400 transition-colors">
          <svg class="w-8 h-8" fill="none" viewBox="0 0 24 24" stroke="currentColor">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12" />
          </svg>
        </button>
        <div id="lightbox-content" class="w-11/12 md:w-3/4 lg:w-1/2 max-w-2xl aspect-video bg-gray-900 rounded-xl overflow-hidden">
          <div class="w-full h-full bg-gradient-to-br from-pink-600/30 to-purple-600/30 flex items-center justify-center">
            <div class="text-center text-gray-300">
              <div class="text-6xl mb-4">üé¨</div>
              <div class="text-xl font-bold">Lightbox Video Player</div>
            </div>
          </div>
        </div>
      </div>
    </section>

                <!-- ======================================= -->
      <!-- 4. "Themed Collection" Feature          -->
      <!-- ======================================= -->
      <section>
        <div class="grid grid-cols-1 lg:grid-cols-2 gap-12 items-center">
           <div class="text-center lg:text-left">
              <p class="text-sm font-bold uppercase tracking-wider text-pink-400">Curated Collection</p>
              <h2 class="mt-2 text-4xl font-black text-white">{themedCollection.title}</h2>
              <p class="mt-4 text-lg text-gray-400">{themedCollection.description}</p>
              <a href="#" class="btn-primary mt-8">Explore Collection</a>
           </div>
           <div class="space-y-4">
              {themedCollection.videos.map((video, i) => (
                 <a href="#" class="flex items-center gap-4 bg-gray-900/50 p-4 rounded-xl border border-gray-800 hover:bg-gray-800/50 hover:border-pink-500/30 transition-all">
                    <div class="text-2xl font-bold text-gray-600">0{i + 1}</div>
                    <div class="flex-grow">
                       <h3 class="font-semibold text-white">{video.title}</h3>
                       <p class="text-sm text-gray-400">{video.duration}</p>
                    </div>
                    <div class="w-10 h-10 flex items-center justify-center rounded-full bg-gray-700/50 text-white">‚ñ∂</div>
                 </a>
              ))}
           </div>
        </div>
     </section>

    <section id="option10" class="space-y-6">
      <div class="border-l-4 border-indigo-500 pl-6">
        <h2 class="text-2xl font-bold text-white">
          Split-Screen Dual Video
        </h2>
        <p class="text-gray-400 text-sm">Compare two videos side by side</p>
      </div>
      <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
        <div class="aspect-[9/16] bg-gray-900/50 rounded-xl overflow-hidden shadow-lg hover:shadow-indigo-500/20 transition-all duration-300 group cursor-pointer">
          <div class="w-full h-full bg-gradient-to-br from-indigo-600/30 to-blue-600/30 flex items-center justify-center relative">
            <div class="text-center text-gray-300">
              <div class="text-4xl mb-2">üé®</div>
              <div class="text-sm font-medium">AI Art Creation</div>
            </div>
            <div class="absolute inset-0 flex items-center justify-center opacity-0 group-hover:opacity-100 transition-opacity bg-black/20">
              <div class="w-12 h-12 bg-white/90 rounded-full flex items-center justify-center">
                <span class="text-black text-xl ml-1">‚ñ∂</span>
              </div>
            </div>
            <div class="absolute bottom-2 right-2 bg-black/80 text-white text-xs px-2 py-1 rounded">
              4:23
            </div>
          </div>
        </div>
        <div class="aspect-[9/16] bg-gray-900/50 rounded-xl overflow-hidden shadow-lg hover:shadow-purple-500/20 transition-all duration-300 group cursor-pointer">
          <div class="w-full h-full bg-gradient-to-br from-purple-600/30 to-pink-600/30 flex items-center justify-center relative">
            <div class="text-center text-gray-300">
              <div class="text-4xl mb-2">üéµ</div>
              <div class="text-sm font-medium">AI Music Video</div>
            </div>
            <div class="absolute inset-0 flex items-center justify-center opacity-0 group-hover:opacity-100 transition-opacity bg-black/20">
              <div class="w-12 h-12 bg-white/90 rounded-full flex items-center justify-center">
                <span class="text-black text-xl ml-1">‚ñ∂</span>
              </div>
            </div>
            <div class="absolute bottom-2 right-2 bg-black/80 text-white text-xs px-2 py-1 rounded">
              3:47
            </div>
          </div>
        </div>
      </div>
    </section>

  </div>

  <script>
    document.addEventListener('DOMContentLoaded', function() {
      // Map Markers Popup
      const markers = ['marker1', 'marker2', 'marker3'];
      const popup = document.getElementById('video-popup');
      const closePopup = document.getElementById('close-popup');
      
      markers.forEach(markerId => {
        const marker = document.getElementById(markerId);
        if (marker) {
          marker.addEventListener('click', () => {
            popup.classList.remove('hidden');
          });
        }
      });
      
      if (closePopup) {
        closePopup.addEventListener('click', () => {
          popup.classList.add('hidden');
        });
      }
      
      // Sticky Mini-Player
      const mainVideo = document.getElementById('main-video');
      const miniPlayer = document.getElementById('mini-player');
      const closeMini = document.getElementById('close-mini');
      
      if (mainVideo && miniPlayer) {
        const observer = new IntersectionObserver(([entry]) => {
          if (entry.intersectionRatio < 0.5) {
            miniPlayer.classList.remove('hidden');
          } else {
            miniPlayer.classList.add('hidden');
          }
        }, { threshold: [0.5] });
        
        observer.observe(mainVideo);
      }
      
      if (closeMini) {
        closeMini.addEventListener('click', () => {
          miniPlayer.classList.add('hidden');
        });
      }
      
      // Lightbox Modal
      const lightboxTriggers = document.querySelectorAll('.lightbox-trigger');
      const lightboxModal = document.getElementById('lightbox-modal');
      const closeLightbox = document.getElementById('close-lightbox');
      
      lightboxTriggers.forEach(trigger => {
        trigger.addEventListener('click', () => {
          lightboxModal.classList.remove('hidden');
          lightboxModal.classList.add('flex');
        });
      });
      
      if (closeLightbox) {
        closeLightbox.addEventListener('click', () => {
          lightboxModal.classList.add('hidden');
          lightboxModal.classList.remove('flex');
        });
      }
      
      // Close modal on background click
      if (lightboxModal) {
        lightboxModal.addEventListener('click', (e) => {
          if (e.target === lightboxModal) {
            lightboxModal.classList.add('hidden');
            lightboxModal.classList.remove('flex');
          }
        });
      }
      
      // Pulse animation for markers
      const style = document.createElement('style');
      style.textContent = `
        .pulse-marker {
          animation: pulse-marker 2s infinite;
        }
        @keyframes pulse-marker {
          0%, 100% {
            box-shadow: 0 0 0 0 rgba(239, 68, 68, 0.7);
          }
          50% {
            box-shadow: 0 0 0 10px rgba(239, 68, 68, 0);
          }
        }
      `;
      document.head.appendChild(style);
    });
  </script>
</Layout>