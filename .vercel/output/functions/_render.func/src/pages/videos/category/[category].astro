---
// src/pages/videos/category/[category].astro
import Layout from '@/components/astro/layout.astro';
import '@/styles/global.css';

// --- MOCK DATA ---
// In a real application, you would fetch this from a CMS or database
const allVideos = [
  // Reviews
  { id: 1, title: 'Midjourney V7 In-Depth Review', creator: '@Pixel_Prophet', duration: '12:45', categorySlug: 'reviews', categoryLabel: 'Reviews', emoji: '🧐' },
  { id: 2, title: 'Is Suno AI the Future of Music?', creator: '@Synthwave_Sound', duration: '08:15', categorySlug: 'reviews', categoryLabel: 'Reviews', emoji: '🎵' },
  { id: 3, title: 'Testing OpenAI\'s Sora: Hype vs. Reality', creator: '@VideoMage_99', duration: '15:30', categorySlug: 'reviews', categoryLabel: 'Reviews', emoji: '🎬' },
  
  // Tutorials
  { id: 4, title: 'Create Cinematic Shots with RunwayML', creator: '@VideoMage_99', duration: '18:20', categorySlug: 'tutorials', categoryLabel: 'Tutorials', emoji: '🎓' },
  { id: 5, title: 'Mastering Photorealism in Midjourney', creator: '@Pixel_Prophet', duration: '22:05', categorySlug: 'tutorials', categoryLabel: 'Tutorials', emoji: '🎨' },
  { id: 6, title: 'Your First Song with Suno: A Beginner\'s Guide', creator: '@Synthwave_Sound', duration: '10:55', categorySlug: 'tutorials', categoryLabel: 'Tutorials', emoji: '🎸' },

  // Music Videos
  { id: 7, title: 'Cybernetic Dreams - AI Music Video', creator: '@Synthwave_Sound', duration: '03:45', categorySlug: 'music-videos', categoryLabel: 'Music Videos', emoji: '🤖' },
  { id: 8, title: 'Lost in the Glitch - Lo-fi Beats', creator: '@Glitch_In_Art', duration: '02:30', categorySlug: 'music-videos', categoryLabel: 'Music Videos', emoji: '👾' },

  // Showcases
  { id: 9, title: 'AI-Generated Short Film: "The Last Byte"', creator: '@VideoMage_99', duration: '05:10', categorySlug: 'showcases', categoryLabel: 'Showcases', emoji: '🍿' },
  { id: 10, title: 'Surreal Landscapes by Midjourney', creator: '@Pixel_Prophet', duration: '04:20', categorySlug: 'showcases', categoryLabel: 'Showcases', emoji: '🖼️' },
];

// Get the current category slug from the URL
const { category: categorySlug } = Astro.params;

// Filter the videos to get only the ones for the current category
const videosForCategory = allVideos.filter(video => video.categorySlug === categorySlug);

// Get the category label from the first video in the filtered list
const categoryLabel = videosForCategory.length > 0 ? videosForCategory[0].categoryLabel : 'Unknown Category';
---

<Layout 
  title=`${categoryLabel} Videos`
  description=`Browse all AI-generated videos in the ${categoryLabel} category.`
>
  <main class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-12 md:py-16">
    <!-- Category Header -->
    <header class="mb-12">
      <h1 class="text-4xl md:text-5xl font-black tracking-tighter text-white">
        Category: <span class="text-gradient-pink">{categoryLabel}</span>
      </h1>
      <p class="text-lg text-gray-400 mt-2">
        {videosForCategory.length} videos found in this category.
      </p>
    </header>
    
    <!-- Filter and Sort Bar -->
    <div class="flex flex-col sm:flex-row justify-between items-center gap-4 mb-8 p-4 bg-gray-900/50 border border-gray-800 rounded-lg">
        <div>
            <span class="text-sm font-medium text-gray-400">Filter by:</span>
            {/* Add filter buttons here if needed */}
        </div>
        <div>
            <label for="sort" class="text-sm font-medium text-gray-400 mr-2">Sort by:</label>
            <select id="sort" name="sort" class="bg-gray-800 border border-gray-700 rounded-md py-2 px-3 text-white text-sm focus:ring-pink-500 focus:border-pink-500">
                <option>Newest</option>
                <option>Most Popular</option>
                <option>Longest</option>
                <option>Shortest</option>
            </select>
        </div>
    </div>

    <!-- Video Grid -->
    <div class="grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 lg:grid-cols-4 gap-x-6 gap-y-10">
      {videosForCategory.map(video => (
        <a href="#" class="video-card group">
          <div class="relative rounded-xl shadow-sm overflow-hidden border border-gray-800/50 group-hover:border-pink-500/30 transition-all duration-300">
            <div class="aspect-video bg-gray-900 flex items-center justify-center text-5xl">
                {video.emoji}
            </div>
            <div class="absolute inset-0 flex items-center justify-center bg-black/50 opacity-0 group-hover:opacity-100 transition-opacity duration-300">
              <div class="w-14 h-14 flex items-center justify-center rounded-full bg-white/20 backdrop-blur-sm border border-white/30">
                <svg xmlns="http://www.w3.org/2000/svg" class="h-7 w-7 text-white ml-1" viewBox="0 0 20 20" fill="currentColor">
                  <path d="M6.3 2.841A1.5 1.5 0 004 4.11V15.89a1.5 1.5 0 002.3 1.269l9.344-5.89a1.5 1.5 0 000-2.538L6.3 2.84z" />
                </svg>
              </div>
            </div>
            <div class="absolute bottom-2 right-2 bg-black/70 text-white text-xs px-2 py-1 rounded-md">{video.duration}</div>
          </div>
          <div class="pt-3">
            <p class="font-semibold text-white line-clamp-2 leading-tight group-hover:text-pink-400 transition-colors">{video.title}</p>
            <p class="text-sm text-gray-400">{video.creator}</p>
          </div>
        </a>
      ))}
    </div>
    
    {videosForCategory.length === 0 && (
      <div class="text-center py-20 bg-gray-900/50 rounded-lg border border-gray-800">
        <p class="text-4xl mb-4">📂</p>
        <h2 class="text-2xl font-bold text-white">No Videos Found</h2>
        <p class="text-gray-400">There are no videos in the "{categoryLabel}" category yet.</p>
      </div>
    )}

  </main>
</Layout>

